// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ENUM 정의
enum CodeFields {
  SUCCESS
  WINNING
  MONEY
  GOOD
  AVERAGE
  BAD
}

enum CodeCategoryFields {
  FORTUNE_STATUS
  FORTUNE_TYPE
}

// MODEL 정의
// TD_FT : TODAY_FORTUNE
model User {
  id        Int                  @id @default(autoincrement())
  userId    String               @unique @map("user_id")
  password  String
  createdAt DateTime             @default(now()) @map("created_at")
  updatedAt DateTime             @updatedAt @map("updated_at")
  fortunes  UserFortuneMapping[]

  @@map("TD_FT_USER")
}

model Fortune {
  id            Int                  @id @default(autoincrement())
  content       String
  fortuneType   CodeFields           @map("fortune_type")
  fortuneStatus CodeFields           @map("fortune_status")
  createdAt     DateTime             @default(now()) @map("created_at")
  updatedAt     DateTime             @updatedAt @map("updated_at")
  users         UserFortuneMapping[]
  type          Code                 @relation(name: "FortuneTypeRelation", fields: [fortuneType], references: [code])
  status        Code                 @relation(name: "FortuneStatusRelation", fields: [fortuneStatus], references: [code])

  @@map("TD_FT_FORTUNE")
}

model UserFortuneMapping {
  id        Int      @id @default(autoincrement())
  userId    Int      @map("user_id")
  fortuneId Int      @map("fortune_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  fortune   Fortune  @relation(fields: [fortuneId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@map("TD_FT_USER_FORTUNE_MAPPING")
}

model Code {
  code           CodeFields   @id @unique
  name           String
  categoryId     Int          @map("category_id")
  createdAt      DateTime     @default(now()) @map("created_at")
  updatedAt      DateTime     @updatedAt @map("updated_at")
  typeFortunes   Fortune[]    @relation(name: "FortuneTypeRelation")
  statusFortunes Fortune[]    @relation(name: "FortuneStatusRelation")
  category       CodeCategory @relation(fields: [categoryId], references: [id])

  @@map("TD_FT_CODE")
}

model CodeCategory {
  id   Int                @id @default(autoincrement())
  name CodeCategoryFields
  code Code[]

  @@map("TD_FT_CODE_CATEGORY")
}
